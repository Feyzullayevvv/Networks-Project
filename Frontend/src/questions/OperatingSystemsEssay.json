[
  {
    "id": 1,
    "question": "Define what a process is in the context of operating systems. Describe the key components that make up a process and how the operating system manages its execution and resources."
  },
  {
    "id": 2,
    "question": "Explain the complete lifecycle of a process, including the main process states and transitions. Support your explanation with diagrams and real-world analogies where helpful."
  },
  {
    "id": 3,
    "question": "Compare threads and processes in terms of memory, communication, and CPU utilization. Discuss why multithreading is used in modern applications and provide examples of its benefits."
  },
  {
    "id": 4,
    "question": "What is a critical section in concurrent programming? Explain why mutual exclusion is required and discuss possible consequences if it is not enforced."
  },
  {
    "id": 5,
    "question": "List and describe the major services provided by an operating system. For each, explain its function and how it supports both users and application programs."
  },
  {
    "id": 6,
    "question": "What are system calls, and how do they allow programs to interact with the operating system? Provide examples from Unix/Linux and explain how these calls are invoked and processed."
  },
  {
    "id": 7,
    "question": "Compare mutex locks, semaphores, and monitors in terms of structure, usage, and effectiveness for synchronization in multi-threaded environments."
  },
  {
    "id": 8,
    "question": "Describe the bounded buffer (producer-consumer) problem and provide a step-by-step solution using semaphores, explaining how synchronization and mutual exclusion are achieved."
  },
  {
    "id": 9,
    "question": "Define what a race condition is in operating systems. Provide examples and explain the conditions under which it occurs and how it can be avoided."
  },
  {
    "id": 10,
    "question": "What is process scheduling and why is it necessary? Describe the role of schedulers and queues in ensuring fair and efficient use of CPU resources."
  },
  {
    "id": 11,
    "question": "Outline the main states of a Java thread and explain how thread transitions occur during execution. Provide Java code snippets where applicable."
  },
  {
    "id": 12,
    "question": "Explain the difference between user-level and kernel-level threads. Discuss their respective advantages, disadvantages, and how each is managed by the system."
  },
  {
    "id": 13,
    "question": "Define starvation and deadlock in operating systems. Explain how these problems arise and compare strategies for prevention, avoidance, and recovery."
  },
  {
    "id": 14,
    "question": "Discuss the role of the Process Control Block (PCB) in process management. Explain what information it stores and how it supports context switching."
  },
  {
    "id": 15,
    "question": "What are system programs in the context of operating system architecture? Describe their role and give examples of how they support user and application interaction with the OS."
  },
  {
    "id": 16,
    "question": "Define the concept of a critical section and describe the key challenges in designing solutions for mutual exclusion in concurrent programming environments."
  },
  {
    "id": 17,
    "question": "What is the synchronization problem in operating systems? Discuss the conditions and requirements for a correct and fair solution to this problem."
  },
  {
    "id": 18,
    "question": "Explain the interfaces provided by an operating system to users and application programs. Distinguish between user interfaces, system calls, and APIs with examples."
  },
  {
    "id": 19,
    "question": "Describe how semaphores are used to solve the producer-consumer problem. Explain the operations involved and the logic for ensuring correct synchronization."
  },
  {
    "id": 20,
    "question": "Discuss the lifecycle of a Java thread with real code examples. Explain how transitions occur between NEW, RUNNABLE, BLOCKED, WAITING, TIMED_WAITING, and TERMINATED states."
  },
  {
    "id": 21,
    "question": "Explain the main states of a Java thread and what events trigger transitions between these states. Support your answer with examples from Java applications."
  },
  {
    "id": 22,
    "question": "What are system programs? Describe their role and purpose in operating systems, and provide a detailed explanation of five main categories, such as file management and communication."
  },
  {
    "id": 23,
    "question": "What is the difference between concurrency and parallelism? Compare them with examples from real applications and explain their relevance in modern computing environments."
  }
]
